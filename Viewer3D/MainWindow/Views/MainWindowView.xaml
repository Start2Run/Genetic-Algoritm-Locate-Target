<controls:MetroWindow  x:Class="Viewer3D.MainWindow.Views.MainWindowView"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                       xmlns:h="http://helix-toolkit.org/wpf"
                       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                       Background="{DynamicResource MaterialDesignPaper}"
                       TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                       xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                       xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                       xmlns:command="http://www.galasoft.ch/mvvmlight"
                       BorderThickness="2"
                       GlowBrush="{DynamicResource AccentColorBrush}"
                       WindowStartupLocation="CenterScreen"
                       WindowState="Maximized"
                       mc:Ignorable="d"
                       Title="Genetic Algorithm"
                       Height="1024"
                       Width="800"
                       Name="This">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ElementName=This, Path=DataContext.CloseWindowClickCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{Binding SettingsClickCommand}"
                    IsEnabled="{Binding IsSettingsBtnEnabled}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="4 0 0 0"
                               VerticalAlignment="Center"
                               Text="Settings"
                               Foreground="DarkRed" />
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{Binding StartClickCommand}"
                    IsEnabled="{Binding IsStartBtnEnabled}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="4 0 0 0"
                               VerticalAlignment="Center"
                               Text="Start"
                               Foreground="DarkRed" />
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <h:HelixViewport3D Grid.Row="0" Name="MainView"
                           Background="Black">
            <h:DefaultLights />
        </h:HelixViewport3D>
        <!--<Label Content="{Binding Generation, FallbackValue='0'}" />-->
        <materialDesign:DialogHost Grid.Row="1" Style="{StaticResource MaterialDesignEmbeddedDialogHost}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   IsOpen="{Binding IsConfigurationWindowOpen}"
                                   DialogContent="{Binding DialogHostContent}"
                                   CloseOnClickAway="True"
                                   Visibility="{Binding IsSettingsBtnEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="DialogClosing">
                    <command:EventToCommand  Command="{Binding CloseDialogHostCommand}"
                                             PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </materialDesign:DialogHost>
    </Grid>
</controls:MetroWindow>
